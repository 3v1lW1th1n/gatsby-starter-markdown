{"version":3,"sources":["webpack:///./src/templates/postTemplate.js"],"names":["mapDispatchToProps","onSidebarContentSelected","onSetSidebarContentEntry","onSetAnchorHide","onSetSidebarHide","onSetAnchorOpen","onSetSidebarOpen","connect","data","markdownRemark","frontmatter","html","id","anchorHide","hideAnchor","console","log","sidebar","onPostPage","className","showTitle","align","title","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"0FAAA,uGAkDA,IAAMA,EAAqB,CACzBC,6BACAC,6BACAC,oBACAC,qBACAC,oBACAC,sBAGaC,uBAAQ,iBAAK,KAAKP,EAAlBO,EA7Cf,YAQI,IAPFC,EAOC,EAPDA,KACAP,EAMC,EANDA,yBACAC,EAKC,EALDA,yBACAC,EAIC,EAJDA,gBACAC,EAGC,EAHDA,iBACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,iBAEQG,EAAmBD,EAAnBC,eACAC,EAA0BD,EAA1BC,YAAaC,EAAaF,EAAbE,KAAMC,EAAOH,EAAPG,GACrBC,EAAyC,OAA3BH,EAAYI,YAA+BJ,EAAYI,WAU3E,OARAC,QAAQC,IAAIN,GACgB,OAAxBA,EAAYO,SAAkBb,GAAiB,GACnDD,EAAgBU,GAChBZ,EAAyBW,GACzBV,EAAyBQ,EAAYO,SACrCX,GAAiB,GACjBD,GAAgB,GAGd,kBAAC,IAAD,CAAQa,YAAY,GACpB,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACXT,EAAYU,UAAY,wBAAIC,MAAM,UAAUX,EAAYY,OAAc,KACxE,yBACEH,UAAU,oBACVI,wBAAyB,CAAEC,OAAQb,WAmBtC,IAAMc,EAAS","file":"component---src-templates-post-template-js-34f9e1a334e50ff81857.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\";\nimport { connect } from 'react-redux'\nimport \"katex/dist/katex.min.css\"\nimport {\n  onSidebarContentSelected,\n  onSetSidebarContentEntry,\n  onSetSidebarHide,\n  onSetAnchorHide,\n  onSetAnchorOpen,\n  onSetSidebarOpen\n} from '../actions/layout'\n\nfunction Template({\n  data, // this prop will be injected by the GraphQL query below.\n  onSidebarContentSelected,\n  onSetSidebarContentEntry,\n  onSetAnchorHide,\n  onSetSidebarHide,\n  onSetAnchorOpen,\n  onSetSidebarOpen,\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html, id } = markdownRemark\n  const anchorHide = (frontmatter.hideAnchor === null) ? false : frontmatter.hideAnchor\n\n  console.log(frontmatter)\n  if (frontmatter.sidebar === null) onSetSidebarHide(true)\n  onSetAnchorHide(anchorHide)\n  onSidebarContentSelected(id)\n  onSetSidebarContentEntry(frontmatter.sidebar)\n  onSetSidebarOpen(false)\n  onSetAnchorOpen(false)\n\n  return (\n    <Layout onPostPage={true}>\n    <div className=\"blog-post-container\">\n      <div className=\"blog-post\">\n        { frontmatter.showTitle ? <h1 align=\"center\">{frontmatter.title}</h1> : null }\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </div>\n    </Layout>\n  )\n}\n\nconst mapDispatchToProps = {\n  onSidebarContentSelected,\n  onSetSidebarContentEntry,\n  onSetAnchorHide,\n  onSetSidebarHide,\n  onSetAnchorOpen,\n  onSetSidebarOpen,\n}\n\nexport default connect(()=>({}), mapDispatchToProps) (Template)\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(fields: { slug: { eq: $path} }) {\n      fields {\n        slug\n      }\n      id\n      html\n      frontmatter {\n        title\n        sidebar\n        showTitle\n        hideAnchor\n      }\n    }\n  }\n`"],"sourceRoot":""}